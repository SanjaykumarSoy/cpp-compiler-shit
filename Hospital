#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <ctime>
using namespace std;

class Doctor {
private:
    string name;
    string specialization;

public:
    Doctor(string _name, string _specialization) : name(_name), specialization(_specialization) {}

    string getName() const {
        return name;
    }

    string getSpecialization() const {
        return specialization;
    }
};

class Patient {
private:
    string name;
    int age;
    string gender;

public:
    Patient(string _name, int _age, string _gender) : name(_name), age(_age), gender(_gender) {}

    string getName() const {
        return name;
    }

    int getAge() const {
        return age;
    }

    string getGender() const {
        return gender;
    }
};

class Appointment {
private:
    Doctor doctor;
    Patient patient;
    string date;
    string time;

public:
    Appointment(Doctor _doctor, Patient _patient, string _date, string _time) : doctor(_doctor), patient(_patient), date(_date), time(_time) {}

    void display() const {
        cout << "Doctor: " << doctor.getName() << " (" << doctor.getSpecialization() << ")" << endl;
        cout << "Patient: " << patient.getName() << " (Age: " << patient.getAge() << ", Gender: " << patient.getGender() << ")" << endl;
        cout << "Date: " << date << ", Time: " << time << endl;
    }
};

class Hospital {
private:
    vector<Doctor> doctors;
    map<string, vector<Appointment>> appointments;

public:
    void addDoctor(Doctor doctor) {
        doctors.push_back(doctor);
    }

    void scheduleAppointment(Doctor doctor, Patient patient, string date, string time) {
        Appointment newAppointment(doctor, patient, date, time);
        appointments[doctor.getName()].push_back(newAppointment);
        cout << "Appointment scheduled successfully." << endl;
    }

    void display() const {
        cout << "Scheduled Appointments:" << endl;
        for (const auto& pair : appointments) {
            cout << "Doctor: " << pair.first << endl;
            for (const auto& appointment : pair.second) {
                appointment.displayAppointment();
                cout << endl;
            }
        }
    }
};

int main() {
    
    Hospital hospital;

    
    Doctor doctor1("Dr. Smith", "Cardiologist");
    Doctor doctor2("Dr. Johnson", "Orthopedic");

    hospital.addDoctor(doctor1);
    hospital.addDoctor(doctor2);

    
    Patient patient1("John Doe", 35, "Male");
    Patient patient2("Jane Smith", 45, "Female");

    time_t now = time(0);
    tm* currentTime = localtime(&now);
    string currentDate = to_string(1900 + currentTime->tm_year) + "-" + to_string(1 + currentTime->tm_mon) + "-" + to_string(currentTime->tm_mday);
    string currentTimeStr = to_string(currentTime->tm_hour) + ":" + to_string(currentTime->tm_min);

    hospital.scheduleAppointment(doctor1, patient1, currentDate, currentTimeStr);
    hospital.scheduleAppointment(doctor2, patient2, currentDate, currentTimeStr);

    
    hospital.display();

    return 0;
}
